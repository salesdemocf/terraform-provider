apiVersion: tf.upbound.io/v1beta1
kind: Workspace
metadata:
  name: codefresh-demo-eks-1
spec:
  providerConfigRef:
    name: aws-irsa
  forProvider:
    source: Inline
    module: |
      resource "aws_eks_cluster" "main" {
        name    = "${var.eks_cluster_name}"
        role_arn = var.aws_iam_role_main_arn

        vpc_config {
          endpoint_public_access  = true
          subnet_ids = [var.aws_subnet_main_1_id, var.aws_subnet_main_2_id]
        }

        access_config {
          authentication_mode                         = "CONFIG_MAP"
          bootstrap_cluster_creator_admin_permissions = true
        }
      }

      resource "aws_eks_addon" "coredns" {
        cluster_name                = aws_eks_cluster.main.name
        addon_name                  = "coredns"
        resolve_conflicts_on_create = "OVERWRITE"
      }

      resource "aws_eks_addon" "kube-proxy" {
        cluster_name                = aws_eks_cluster.main.name
        addon_name                  = "kube-proxy"
        resolve_conflicts_on_create = "OVERWRITE"
      }

      resource "aws_eks_addon" "vpc-cni" {
        cluster_name                = aws_eks_cluster.main.name
        addon_name                  = "vpc-cni"
        resolve_conflicts_on_create = "OVERWRITE"
      }

      resource "aws_eks_node_group" "main" {
        cluster_name    = aws_eks_cluster.main.name
        node_group_name = aws_eks_cluster.main.name
        node_role_arn   = aws_iam_role.main.arn
        subnet_ids      = [var.aws_subnet_main_1_id, var.aws_subnet_main_2_id]
        instance_types = ["t3.large"]

        scaling_config {
          desired_size = 1
          max_size     = 2
          min_size     = 1
        }

        update_config {
          max_unavailable = 1
        }
      }

      variable "eks_cluster_name" {
        description = "EKS Cluster Name"
        type        = string
      }
      variable "aws_iam_role_main_arn" {
        description = "AWS Role ARN"
        type        = string
      }
      variable "aws_subnet_main_1_id" {
        description = "AWS Subnet 1 ID"
        type        = string
      }
      variable "aws_subnet_main_2_id" {
        description = "AWS Subnet 2 ID"
        type        = string
      }
    vars:
      - key: eks_cluster_name
        value: "codefresh-demo-environment-eks-2"
      - key: aws_iam_role_main_arn
        value: "arn:aws:iam::336151728602:role/codefresh-demo-environment"
      - key: aws_subnet_main_1_id
        value: "subnet-024f5da41416f15d7"
      - key: aws_subnet_main_2_id
        value: "subnet-01a1ec73642b8f057"